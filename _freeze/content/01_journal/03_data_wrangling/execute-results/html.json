{
  "hash": "53b0fea6386bdea3c6fdea59bb636ec0",
  "result": {
    "markdown": "---\ntitle: \"Data Wrangling\"\nauthor: \"Kevin Thomas\"\n---\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-1_477c765a2654e9c2a1f0d23da17adc40'}\n\n```{.r .cell-code}\nlibrary(data.table)\nlibrary(httr)\nlibrary(jsonlite)\nlibrary(vroom)\nlibrary(tidyverse)\n\n#Get the Data\n\n#patent_DT\ncol_types <- list(\n  id = col_character(),\n  date = col_date(\"%Y-%m-%d\"),\n  num_claims = col_double()\n)\n\npatent_DT <- vroom(\n  file       = \"patent.tsv\", \n  delim      = \"\\t\", \n  col_types  = col_types,\n  na         = c(\"\", \"NA\", \"NULL\")\n) %>% \n  setDT()\n#assignee_DT\ncol_types <- list(\n  id = col_character(),\n  type = col_character()\n)\n\nassignee_DT <- vroom(\n  file       = \"assignee.tsv\", \n  delim      = \"\\t\", \n  col_types  = col_types,\n  na         = c(\"\", \"NA\", \"NULL\")\n) %>% \n  setDT()\n\nassignee_DT[,.(assignee_id = type)]\nnames(assignee_DT)\n\n#patent_assignee_DT\ncol_types <- list(\n  patent_id = col_character(),\n  assignee_id = col_character()\n  #location_id = col_character()\n  )\n\npatent_assignee_DT <- vroom(\n  file       = \"patent_assignee.tsv\", \n  delim      = \"\\t\", \n  col_types  = col_types,\n  na         = c(\"\", \"NA\", \"NULL\")\n) %>% \n  setDT()\n#uspc_DT\ncol_types <- list(\npatent_id = col_character(),\nmainclass_id = col_character(),\nsequence = col_integer()\n)\n\nuspc_DT <- vroom(\n  file       = \"uspc.tsv\", \n  delim      = \"\\t\", \n  col_types  = col_types,\n  na         = c(\"\", \"NA\", \"NULL\")\n) %>% \n  setDT()\n\n#Challenge 1\n#hierachy_patents_by_company (assignee_id)\n\nhierachy_patents_by_company <- patent_assignee_DT[,.N, by = assignee_id]\nhierachy_patents_by_company <- hierachy_patents_by_company[order(-N)]\n\nassignee_id_top10companies <- hierachy_patents_by_company[1:10]\n\n#doesn't work :S get the names corresponding to the IDs\nmerge(assignee_id_top10companies, assignee_DT,by = assignee_id)\n\n\n#2 find top 10 companies in August\n\n# find patent ids in august\npatent_idS_in_August <- patent_DT[,id,by = lubridate::month(date, label = F) == 08]\n#find corresponding assignee ids\nfilterd_assignee_ids_August <- patent_assignee_DT[patent_assignee_DT$patent_id %in% patent_idS_in_August,]\n# get the number of patents for each assignee id\nhierachy_patents_by_company_August <- filterd_assignee_ids_August[,.N, by = assignee_id]\n# sort descending\nhierachy_patents_by_company_August <- filterd_assignee_ids_August[order(-N)]\n# provide top 10 companies\nassignee_id_top10companies_in_August <- hierachy_patents_by_company_August[1:10]\n#doesn't work :S\nmerge(assignee_id_top10companies, assignee_DT,by = assignee_id)\n\n#3 find top 10 companies in top 10 sectors\nhierachy_patents_by_mainclass_id <- uspc_DT[,.N, by = mainclass_id]\nhierachy_patents_by_mainclass_id <- hierachy_patents_by_mainclass_id[order(-N)]\n\n#provide top 10 classes = sectors\ntop10_mainclasses <- hierachy_patents_by_mainclass_id[1:10]\n\n# group patents by mainclass_id\npatents_of_the_mainclass_ids <- uspc_DT[,patent_id, by = mainclass_id]\n\n# keep the patent ids beloning to the top 10 mainclasses\nfilterd_patents_top10_mainclasses <- patents_of_the_mainclass_ids[patents_of_the_mainclass_ids$mainclass_id %in% top10_mainclasses,]\n\n# filter all patents by the top10 mainclass patents\nfilterd_assignee_ids_top10_mainclasses <- patent_assignee_DT[patent_assignee_DT$patent_id %in% filterd_patents_top10_mainclasses,]\n\n# get the number of patents for each assignee id\nhierachy_patents_by_company_to10_mainclasses <- filterd_assignee_ids_top10_mainclasses[,.N, by = assignee_id]\n\n# sort descending\nhierachy_patents_by_company_top10_mainclasses <- hierachy_patents_by_company_to10_mainclasses[order(-N)]\n\n# provide top 10 companies\nassignee_id_top10companies_in_top10_mainclasses <- hierachy_patents_by_company_to10_mainclasses[1:10]\n\n#doesn't work :S get the names corresponding to the IDs\nmerge(assignee_id_top10companies_in_top10_mainclasses, assignee_DT,by = assignee_id)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}